var Pe=Object.defineProperty;var de=r=>{throw TypeError(r)};var Le=(r,e,t)=>e in r?Pe(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var U=(r,e,t)=>Le(r,typeof e!="symbol"?e+"":e,t),ue=(r,e,t)=>e.has(r)||de("Cannot "+t);var s=(r,e,t)=>(ue(r,e,"read from private field"),t?t.call(r):e.get(r)),h=(r,e,t)=>e.has(r)?de("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(r):e.set(r,t),m=(r,e,t,o)=>(ue(r,e,"write to private field"),o?o.call(r,t):e.set(r,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();const be=(r,e=!1)=>`
  <article class="story-item">
    <img src="${r.photoUrl}" alt="${r.description}" class="story-item__thumbnail" loading="lazy">
    <div class="story-item__content">
      <h3 class="story-item__name">${r.name}</h3>
      <p class="story-item__description">${r.description}</p>
      <p class="story-item__date">${new Date(r.createdAt).toLocaleDateString()}</p>
      ${r.lat&&r.lon?`
        <button class="story-item__view-on-map" data-lat="${r.lat}" data-lon="${r.lon}" onclick="window.location.hash = '#/detail/${r.id}'">Lihat di Peta</button>
      `:""}
      <button class="bookmarkBtn" data-id="${r.id}">
        ${e?"Hapus Bookmark":"Simpan Cerita"}
      </button>
    </div>
  </article>
`,Me="story-app-db",_e=3,v="bookmarks";var te;let W=(te=class{static async _openDatabase(){return this._database?this._database:new Promise((e,t)=>{const o=indexedDB.open(Me,_e);o.onupgradeneeded=n=>{n.target.result.createObjectStore(v,{keyPath:"id"})},o.onsuccess=n=>{this._database=n.target.result,e(this._database)},o.onerror=n=>{console.error("Failed to open IndexedDB:",n.target.error),t(n.target.error)}})}static async putBookmark(e){const n=(await this._openDatabase()).transaction(v,"readwrite").objectStore(v);return new Promise((i,a)=>{const c=n.put(e);c.onsuccess=()=>i(),c.onerror=u=>a(u.target.error)})}static async deleteBookmark(e){const n=(await this._openDatabase()).transaction(v,"readwrite").objectStore(v);return new Promise((i,a)=>{const c=n.delete(e);c.onsuccess=()=>i(),c.onerror=u=>a(u.target.error)})}static async isBookmarked(e){const n=(await this._openDatabase()).transaction(v,"readonly").objectStore(v);return new Promise((i,a)=>{const c=n.get(e);c.onsuccess=()=>i(!!c.result),c.onerror=u=>a(u.target.error)})}static async getAllBookmarks(){const o=(await this._openDatabase()).transaction(v,"readonly").objectStore(v);return new Promise((n,i)=>{const a=o.getAll();a.onsuccess=()=>n(a.result),a.onerror=c=>i(c.target.error)})}},U(te,"_database",null),te);class we{async getAllBookmarks(){return W.getAllBookmarks()}async deleteBookmark(e){return W.deleteBookmark(e)}async isBookmarked(e){return W.isBookmarked(e)}async putBookmark(e){return W.putBookmark(e)}}const q="https://story-api.dicoding.dev/v1",Y={REGISTER:`${q}/register`,LOGIN:`${q}/login`,ADD_STORY:`${q}/stories`,GET_ALL_STORIES:`${q}/stories`},oe=(r,e)=>e.some(t=>r instanceof t);let he,me;function Ce(){return he||(he=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function De(){return me||(me=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const se=new WeakMap,Q=new WeakMap,Z=new WeakMap;function Te(r){const e=new Promise((t,o)=>{const n=()=>{r.removeEventListener("success",i),r.removeEventListener("error",a)},i=()=>{t(D(r.result)),n()},a=()=>{o(r.error),n()};r.addEventListener("success",i),r.addEventListener("error",a)});return Z.set(e,r),e}function Ae(r){if(se.has(r))return;const e=new Promise((t,o)=>{const n=()=>{r.removeEventListener("complete",i),r.removeEventListener("error",a),r.removeEventListener("abort",a)},i=()=>{t(),n()},a=()=>{o(r.error||new DOMException("AbortError","AbortError")),n()};r.addEventListener("complete",i),r.addEventListener("error",a),r.addEventListener("abort",a)});se.set(r,e)}let ne={get(r,e,t){if(r instanceof IDBTransaction){if(e==="done")return se.get(r);if(e==="store")return t.objectStoreNames[1]?void 0:t.objectStore(t.objectStoreNames[0])}return D(r[e])},set(r,e,t){return r[e]=t,!0},has(r,e){return r instanceof IDBTransaction&&(e==="done"||e==="store")?!0:e in r}};function ke(r){ne=r(ne)}function xe(r){return De().includes(r)?function(...e){return r.apply(re(this),e),D(this.request)}:function(...e){return D(r.apply(re(this),e))}}function Fe(r){return typeof r=="function"?xe(r):(r instanceof IDBTransaction&&Ae(r),oe(r,Ce())?new Proxy(r,ne):r)}function D(r){if(r instanceof IDBRequest)return Te(r);if(Q.has(r))return Q.get(r);const e=Fe(r);return e!==r&&(Q.set(r,e),Z.set(e,r)),e}const re=r=>Z.get(r);function Ne(r,e,{blocked:t,upgrade:o,blocking:n,terminated:i}={}){const a=indexedDB.open(r,e),c=D(a);return o&&a.addEventListener("upgradeneeded",u=>{o(D(a.result),u.oldVersion,u.newVersion,D(a.transaction),u)}),t&&a.addEventListener("blocked",u=>t(u.oldVersion,u.newVersion,u)),c.then(u=>{i&&u.addEventListener("close",()=>i()),n&&u.addEventListener("versionchange",y=>n(y.oldVersion,y.newVersion,y))}).catch(()=>{}),c}const Ue=["get","getKey","getAll","getAllKeys","count"],Re=["put","add","delete","clear"],X=new Map;function ge(r,e){if(!(r instanceof IDBDatabase&&!(e in r)&&typeof e=="string"))return;if(X.get(e))return X.get(e);const t=e.replace(/FromIndex$/,""),o=e!==t,n=Re.includes(t);if(!(t in(o?IDBIndex:IDBObjectStore).prototype)||!(n||Ue.includes(t)))return;const i=async function(a,...c){const u=this.transaction(a,n?"readwrite":"readonly");let y=u.store;return o&&(y=y.index(c.shift())),(await Promise.all([y[t](...c),n&&u.done]))[0]};return X.set(e,i),i}ke(r=>({...r,get:(e,t,o)=>ge(e,t)||r.get(e,t,o),has:(e,t)=>!!ge(e,t)||r.has(e,t)}));const $e=["continue","continuePrimaryKey","advance"],pe={},ie=new WeakMap,ve=new WeakMap,Ve={get(r,e){if(!$e.includes(e))return r[e];let t=pe[e];return t||(t=pe[e]=function(...o){ie.set(this,ve.get(this)[e](...o))}),t}};async function*je(...r){let e=this;if(e instanceof IDBCursor||(e=await e.openCursor(...r)),!e)return;e=e;const t=new Proxy(e,Ve);for(ve.set(t,e),Z.set(t,re(e));e;)yield t,e=await(ie.get(t)||e.continue()),ie.delete(t)}function ye(r,e){return e===Symbol.asyncIterator&&oe(r,[IDBIndex,IDBObjectStore,IDBCursor])||e==="iterate"&&oe(r,[IDBIndex,IDBObjectStore])}ke(r=>({...r,get(e,t,o){return ye(e,t)?je:r.get(e,t,o)},has(e,t){return ye(e,t)||r.has(e,t)}}));const Be="story-app-db",Se=3,B="stories";function He(){return new Promise((r,e)=>{const t=indexedDB.open(Be,Se);t.onupgradeneeded=o=>{const n=o.target.result;n.objectStoreNames.contains("stories")||n.createObjectStore("stories",{keyPath:"id"}),n.objectStoreNames.contains("bookmarks")||n.createObjectStore("bookmarks",{keyPath:"id"})},t.onsuccess=()=>r(),t.onerror=o=>e(o.target.error)})}const K={async open(){return Ne(Be,Se,{upgrade(r){r.objectStoreNames.contains(B)||r.createObjectStore(B,{keyPath:"id"}),r.objectStoreNames.contains("bookmarks")||r.createObjectStore("bookmarks",{keyPath:"id"})}})},async getStoryDetail(r){return(await this.open()).get(B,r)},async getAllStories(){return(await this.open()).getAll(B)},async putStories(r){const t=(await this.open()).transaction(B,"readwrite"),o=t.objectStore(B);return await Promise.all(r.map(n=>o.put(n))),t.done},async clearStories(){const e=(await this.open()).transaction(B,"readwrite");return await e.objectStore(B).clear(),e.done}};class w{constructor(e=Y.LOGIN){this.baseUrl=e}static getToken(){return localStorage.getItem("authToken")}static setToken(e){localStorage.setItem("authToken",e)}static getUserName(){return localStorage.getItem("userName")}static getUserId(){return localStorage.getItem("userId")}static async _clearServiceWorkerCaches(){return"serviceWorker"in navigator&&navigator.serviceWorker.controller?(console.log("Sending message to service worker to clear caches..."),new Promise((e,t)=>{const o=new MessageChannel;o.port1.onmessage=n=>{n.data.status==="success"?(console.log("Service worker caches cleared successfully."),e()):(console.error("Failed to clear service worker caches:",n.data.error),t(new Error(n.data.error)))},navigator.serviceWorker.controller.postMessage({action:"clearAllCaches"},[o.port2])})):(console.warn("Service Worker not registered or active. Cannot clear caches."),Promise.resolve())}static async _clearAllIndexedDBData(){console.log("Clearing all data in IndexedDB...");try{await K.clearStories(),console.log("All IndexedDB data (stories) cleared successfully.")}catch(e){throw console.error("Failed to clear IndexedDB data:",e),e}}async login(e,t){try{const o=await fetch(this.baseUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})}),n=await o.json();if(!o.ok)throw new Error(n.message||"Login failed");return{success:!0,data:{message:n.message,userId:n.loginResult.userId,name:n.loginResult.name,token:n.loginResult.token},error:null}}catch(o){return{success:!1,data:null,error:o.message||"An error occurred during login"}}}static isValidEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}static storeAuthData(e,t,o){localStorage.setItem("authToken",e),localStorage.setItem("userId",t),localStorage.setItem("userName",o)}static isAuthenticated(){return!!localStorage.getItem("authToken")}static async clearAuthData(){localStorage.removeItem("authToken"),localStorage.removeItem("userId"),localStorage.removeItem("userName"),await w._clearAllIndexedDBData(),await w._clearServiceWorkerCaches()}}var d,T,J,M,S;class Oe{constructor({view:e,storyModel:t,authModel:o,notificationModel:n,bookmarkModel:i}){h(this,d);h(this,T);h(this,J);h(this,M);h(this,S);m(this,d,e),m(this,T,t),m(this,J,o),m(this,M,n),m(this,S,i)}async initialize(){s(this,d).bindLogoutButton(this._handleLogout.bind(this)),s(this,d).bindSubscribeButton(this._handleSubscribe.bind(this)),s(this,d).bindUnsubscribeButton(this._handleUnsubscribe.bind(this)),s(this,d).bindBookmarkButton(this._handleBookmarkToggle.bind(this)),s(this,d).bindBookmarkPageButton(this._handleNavigateToBookmarkPage.bind(this)),await this._loadStories(),await this._checkSubscriptionStatus(),s(this,d).focusMainContent(),s(this,d).handleSkipLinkAutoFocus()}_handleLogout(e){e.preventDefault(),w.clearAuthData(),s(this,d).redirectToLogin()}async _loadStories(){const e=w.getToken();if(!e){s(this,d).displayLoginPrompt();return}try{const t=await s(this,T).getAllStories(e,1,10,0);if(t.success){const o=await Promise.all(t.data.map(async n=>{const i=await s(this,S).isBookmarked(n.id);return{...n,isBookmarked:i}}));s(this,d).renderStories(o)}else console.error("Error fetching stories:",t.error),s(this,d).displayErrorMessage(t.error)}catch(t){console.error("Failed to fetch stories:",t),s(this,d).displayErrorMessage("Terjadi kesalahan saat mengambil data cerita.")}}async _checkSubscriptionStatus(){const e=await s(this,M).getSubscriptionStatus();if(!e.supported){s(this,d).showNotifStatus("Push notification tidak didukung di browser ini.",!0),s(this,d).showSubscribeButton(!1);return}e.subscribed?(s(this,d).showSubscribeButton(!0),s(this,d).showNotifStatus("Anda sudah berlangganan notifikasi.")):(s(this,d).showSubscribeButton(!1),s(this,d).showNotifStatus("Anda belum berlangganan notifikasi."))}async _handleSubscribe(){s(this,d).showNotifStatus("Memproses langganan notifikasi...");try{const e=w.getToken();if(!e){s(this,d).displayErrorMessage("Authentication token is missing. Please log in."),s(this,d).redirectToLogin();return}await s(this,M).subscribeUserToPush(e),s(this,d).showNotifStatus("Berhasil berlangganan notifikasi!"),s(this,d).showSubscribeButton(!0)}catch(e){s(this,d).showNotifStatus("Gagal berlangganan notifikasi: "+(e.message||e),!0),s(this,d).showSubscribeButton(!1)}}async _handleUnsubscribe(){s(this,d).showNotifStatus("Memproses berhenti langganan...");try{const e=w.getToken();if(!e){s(this,d).displayErrorMessage("Authentication token is missing. Please log in."),s(this,d).redirectToLogin();return}await s(this,M).unsubscribeUserFromPush(e),s(this,d).showNotifStatus("Berhasil berhenti langganan notifikasi."),s(this,d).showSubscribeButton(!1)}catch(e){s(this,d).showNotifStatus("Gagal berhenti langganan: "+(e.message||e),!0),s(this,d).showSubscribeButton(!0)}}async _handleBookmarkToggle(e){try{if(await s(this,S).isBookmarked(e))await s(this,S).deleteBookmark(e),s(this,d).updateBookmarkButton(e,!1),s(this,d).showMessage("Cerita berhasil dihapus dari favorit.");else{const o=w.getToken(),i=(await s(this,T).getAllStories(o)).data.find(a=>a.id===e);i?(await s(this,S).putBookmark(i),s(this,d).updateBookmarkButton(e,!0),s(this,d).showMessage("Cerita berhasil ditambahkan ke favorit.")):s(this,d).displayErrorMessage("Gagal menemukan cerita untuk ditambahkan ke favorit.")}}catch(t){s(this,d).displayErrorMessage("Gagal mengubah status favorit: "+(t.message||t))}}_handleNavigateToBookmarkPage(){s(this,d).redirectToBookmarkPage()}}d=new WeakMap,T=new WeakMap,J=new WeakMap,M=new WeakMap,S=new WeakMap;class Ge{constructor(e=Y.GET_ALL_STORIES||"https://story-api.dicoding.dev/v1/stories"){this.baseUrl=e}async getAllStories(e,t=1,o=10,n=0){try{const i=await fetch(`${this.baseUrl}?page=${t}&size=${o}&location=${n}`,{method:"GET",headers:{Authorization:`Bearer ${e}`}}),a=await i.json();if(i.ok&&a.listStory)return await K.putStories(a.listStory),{success:!0,data:a.listStory,error:null,source:"network"};{console.warn("Network fetch failed, attempting to get from IndexedDB.");const c=await K.getAllStories();if(c&&c.length>0)return{success:!0,data:c,error:a.message||null,source:"indexeddb_fallback"};throw new Error(a.message||"Failed to fetch stories from network or cache.")}}catch(i){console.error("Error fetching stories:",i);try{const a=await K.getAllStories();return a&&a.length>0?{success:!0,data:a,error:i.message||null,source:"indexeddb"}:{success:!1,data:null,error:i.message||"An error occurred and no cached data available.",source:"no_data_available"}}catch(a){return console.error("Error retrieving from IndexedDB:",a),{success:!1,data:null,error:`Network error and IndexedDB retrieval failed: ${i.message||a.message}`,source:"fetch_and_indexeddb_failed"}}}}}const ze="BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk";function We(r){const e="=".repeat((4-r.length%4)%4),t=(r+e).replace(/\-/g,"+").replace(/_/g,"/"),o=window.atob(t),n=new Uint8Array(o.length);for(let i=0;i<o.length;++i)n[i]=o.charCodeAt(i);return n}class qe{constructor(){this._vapidPublicKey=ze}async subscribeUserToPush(e){if(!("serviceWorker"in navigator)||!("PushManager"in window))throw new Error("Service Worker or Push API not supported");try{const t=await navigator.serviceWorker.ready,o=We(this._vapidPublicKey),n=await t.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:o});return console.log("Push Subscription:",n),await this._sendSubscriptionToBackend(n,e)}catch(t){throw console.error("Failed to subscribe the user: ",t),t}}async _sendSubscriptionToBackend(e,t){if(!t)throw console.error("No auth token found"),new Error("Authentication token is missing.");const o="https://story-api.dicoding.dev/v1/notifications/subscribe";console.log("Preparing subscription data for backend...");const n=e.getKey("p256dh"),i=e.getKey("auth");if(!n||!i)throw console.error("Subscription keys are missing"),new Error("Subscription keys are missing");const a={endpoint:e.endpoint,keys:{p256dh:btoa(String.fromCharCode(...new Uint8Array(n))),auth:btoa(String.fromCharCode(...new Uint8Array(i)))}};console.log("Sending subscription to backend:",a);try{const c=await fetch(o,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(a)}),u=await c.json();if(!c.ok)throw console.error("Backend subscription error:",u),new Error(u.message||"Failed to send subscription to backend");return console.log("Backend subscription successful:",u),u}catch(c){throw console.error("Subscription error:",c),c}}async unsubscribeUserFromPush(e){if(!("serviceWorker"in navigator))throw new Error("Service Worker not supported");try{const o=await(await navigator.serviceWorker.ready).pushManager.getSubscription();if(o){const n=o.endpoint;if(await o.unsubscribe())return console.log("User unsubscribed successfully."),await this._sendUnsubscriptionToBackend(n,e);throw new Error("Failed to unsubscribe the user from browser.")}else return console.log("No active push subscription found."),null}catch(t){throw console.error("Failed to unsubscribe the user: ",t),t}}async _sendUnsubscriptionToBackend(e,t){if(!t)throw console.error("No auth token found"),new Error("Authentication token is missing.");const o="https://story-api.dicoding.dev/v1/notifications/subscribe",n={endpoint:e};try{const i=await fetch(o,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(n)}),a=await i.json();if(!i.ok)throw new Error(a.message||"Failed to send unsubscription to backend");return console.log("Unsubscription sent to backend successfully:",a),a}catch(i){throw console.error("Error sending unsubscription to backend:",i),i}}async getSubscriptionStatus(){if(!("serviceWorker"in navigator)||!("PushManager"in window))return{supported:!1,subscribed:!1,error:"Push notification not supported"};try{return{supported:!0,subscribed:!!await(await navigator.serviceWorker.ready).pushManager.getSubscription()}}catch{return{supported:!0,subscribed:!1,error:"Failed to check subscription status."}}}}var R;class Ke{constructor(){h(this,R)}getTemplate(){return`
      <header>
        <div class="header-content">
        <a href="#mainContent" class="skip-link">Skip to main content</a>
          <a href="#/login" id="logoutBtn" class="back-button">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M19 12H5M12 19l-7-7 7-7"/>
            </svg>
            Logout
          </a>
          <div id="userInfo"></div>
          <button id="subscribeBtn">Subscribe</button>
          <button id="unsubscribeBtn">Unsubscribe</button>
          <div id="notifStatus"></div> </div>
      </header>
      <main id='mainContent' tabindex="-1"> <h1>Story List</h1>
        <h2>Bagikan Ceritamu!</h2>
        <p>Temukan cerita menarik dari pengguna Dicoding.</p>
        <a id="tambahBtn" href="#/add">Tambah Cerita</a>
        <a id="bookmarkPageBtn" href="#/bookmark">Cerita Favorit Anda</a>
        <div id="story-container"></div>
      </main>
      <footer style="text-align: center; padding: 1.5rem 0; background: #f5f5f5; color: #333; font-size: 1rem;">
        <p>&copy; 2025 Dicoding Story App. All rights reserved.</p>
      </footer>
    `}getElements(){return{logoutBtn:document.getElementById("logoutBtn"),storyContainer:document.getElementById("story-container"),userInfoDiv:document.getElementById("userInfo"),mainContent:document.querySelector("#mainContent"),skipLink:document.querySelector(".skip-link"),subscribeBtn:document.getElementById("subscribeBtn"),unsubscribeBtn:document.getElementById("unsubscribeBtn"),bookmarkPageBtn:document.getElementById("bookmarkPageBtn"),notifStatus:document.getElementById("notifStatus")}}bindBookmarkPageButton(e){const{bookmarkPageBtn:t}=this.getElements();t&&t.addEventListener("click",e)}bindSubscribeButton(e){const{subscribeBtn:t}=this.getElements();t&&t.addEventListener("click",e)}bindUnsubscribeButton(e){const{unsubscribeBtn:t}=this.getElements();t&&t.addEventListener("click",e)}showSubscribeButton(e){const{subscribeBtn:t,unsubscribeBtn:o}=this.getElements();t&&o&&(e?(t.style.display="none",o.style.display="inline-block"):(t.style.display="inline-block",o.style.display="none"))}showNotifStatus(e,t=!1){const{notifStatus:o}=this.getElements();o&&(o.textContent=e,o.style.color=t?"red":"green")}bindLogoutButton(e){const{logoutBtn:t}=this.getElements();t&&t.addEventListener("click",e)}bindBookmarkButton(e){this._bookmarkButtonClickHandler=e}async showNotificationPermissionPrompt(){return Notification.requestPermission()}async getNotificationPermission(){return Notification.permission}checkNotificationSupport(){return{supported:"Notification"in window&&"serviceWorker"in navigator&&"PushManager"in window}}showNotificationSupportWarning(){this.showNotifStatus("Push notification tidak didukung di browser ini.",!0)}showNotificationPermissionDeniedWarning(){this.showNotifStatus("Izin notifikasi ditolak. Anda tidak akan menerima push notifikasi.",!0)}showGenericNotificationError(e){this.showNotifStatus(`Terjadi kesalahan notifikasi: ${e}`,!0)}async renderStories(e){const{storyContainer:t}=this.getElements();if(t){t.innerHTML="";for(const o of e){const n=document.createElement("div");n.classList.add("story"),n.innerHTML+=be(o,o.isBookmarked),t.appendChild(n)}this._bindBookmarkButtonsToElements()}}updateBookmarkButton(e,t){const o=document.querySelector(`.bookmarkBtn[data-id="${e}"]`);o&&(o.textContent=t?"Hapus Bookmark":"Simpan Cerita")}_bindBookmarkButtonsToElements(){const{storyContainer:e}=this.getElements();if(!e||!this._bookmarkButtonClickHandler)return;e.querySelectorAll(".bookmarkBtn").forEach(o=>{o._bookmarkListener&&o.removeEventListener("click",o._bookmarkListener);const n=i=>{const a=o.getAttribute("data-id");this._bookmarkButtonClickHandler(a)};o.addEventListener("click",n),o._bookmarkListener=n})}handleSkipLinkAutoFocus(){const{skipLink:e}=this.getElements();if(!e)return;function t(){window.scrollY===0?(e.style.top="80px",e.style.left="50px",e.tabIndex=0,e.focus()):(e.style.top="-100px",e.tabIndex=-1,e.blur())}window.addEventListener("scroll",t),window.addEventListener("load",t)}displayLoginPrompt(){const{storyContainer:e}=this.getElements();e&&(e.innerHTML='<p>Anda harus <a href="#/login">login</a> terlebih dahulu untuk melihat daftar cerita.</p>')}displayErrorMessage(e){const{storyContainer:t}=this.getElements();t&&(t.innerHTML=`<p>Error: ${e}</p>`)}showMessage(e){alert(e)}focusMainContent(){const{mainContent:e,skipLink:t}=this.getElements();!e||!t||t._focusHandlerAdded||(t.addEventListener("click",function(o){o.preventDefault(),t.blur();const n=e.querySelector(".story-item__view-on-map");n?n.focus():e.focus(),e.scrollIntoView()}),t._focusHandlerAdded=!0)}redirectToLogin(){window.location.hash="#/login"}redirectToBookmarkPage(){window.location.hash="#/bookmark"}async render(){return this.getTemplate()}async afterRender(){const e=new Ge,t=new w,o=new qe,n=new we,{unsubscribeBtn:i}=this.getElements();i&&(i.style.display="none"),await He().catch(a=>{console.error("Failed to initialize database:",a)}),m(this,R,new Oe({view:this,storyModel:e,authModel:t,notificationModel:o,bookmarkModel:n})),await s(this,R).initialize()}}R=new WeakMap;var l,E,A;class Je{constructor({view:e,addStoryModel:t,authModel:o}){h(this,l);h(this,E);h(this,A);U(this,"_cameraStream",null);if(!e||!t||!o)throw new Error("View, AddStoryModel, and AuthModel must be provided.");m(this,l,e),m(this,E,t),m(this,A,o)}async initialize(){if(!s(this,A).getToken()){s(this,l).displayMessage("You need to login first to share a story","error"),s(this,l).hideForm(),s(this,l).redirectToLoginAfterDelay(2e3);return}const t=await s(this,E).getInitialMapLocation();s(this,l).renderMap(t.lat,t.lon,this._handleMapClick.bind(this),this._handleLatLonInputUpdateFromView.bind(this)),s(this,l).setLatLonInput(t.lat,t.lon),s(this,l).bindFormSubmit(this._handleSubmitStory.bind(this)),s(this,l).bindStartCameraButton(this._handleStartCamera.bind(this)),s(this,l).bindCaptureButton(this._handleCapturePhoto.bind(this)),s(this,l).bindCloseCameraButton(this._handleCloseCamera.bind(this)),s(this,l).bindPhotoInputChange(this._handlePhotoInputChange.bind(this)),s(this,l).bindLocationInputChanges(this._handleLatLonInputUpdateFromView.bind(this)),s(this,l).bindHashChange(this._handleCloseCamera.bind(this)),s(this,l).bindPopState(this._handleCloseCamera.bind(this))}_handleMapClick(e,t){s(this,l).updateMapMarker(e,t),s(this,l).setLatLonInput(e,t),s(this,l).setMapView(e,t)}_handleLatLonInputUpdateFromView(){const{latInput:e,lonInput:t}=s(this,l).getElements(),o=parseFloat(e.value),n=parseFloat(t.value);isNaN(o)||isNaN(n)||(s(this,l).updateMapMarker(o,n),s(this,l).setMapView(o,n))}async _handleStartCamera(){try{this._cameraStream=await s(this,l).getCameraStream(),s(this,l).showCameraPreview(this._cameraStream)}catch(e){s(this,l).displayMessage("Unable to access camera: "+e.message,"error"),console.error("Failed to start camera:",e)}}async _handleCapturePhoto(){if(!this._cameraStream){s(this,l).displayMessage("No active camera stream.","error");return}const e=await s(this,l).capturePhoto(this._cameraStream);e?(s(this,l).displayPhotoPreview(URL.createObjectURL(e)),s(this,l).stopCameraStream(this._cameraStream),this._cameraStream=null,s(this,l).hideCameraPreview()):s(this,l).displayMessage("Failed to capture photo.","error")}_handleCloseCamera(){this._cameraStream&&(s(this,l).stopCameraStream(this._cameraStream),this._cameraStream=null),s(this,l).hideCameraPreview(),s(this,l).clearPhotoPreview()}_handlePhotoInputChange(e){const t=e.target.files[0];t?s(this,E).constructor.isValidImage(t)?s(this,l).displayPhotoPreview(URL.createObjectURL(t)):(s(this,l).displayMessage("Please upload a valid image (JPEG/PNG/GIF, max 1MB)","error"),s(this,l).clearPhotoPreview(),e.target.value=""):s(this,l).clearPhotoPreview()}async _handleSubmitStory(e){e.preventDefault(),s(this,l).hideMessage(),s(this,l).disableSubmitButton(!0);const{descriptionInput:t,photoInput:o,latInput:n,lonInput:i}=s(this,l).getElements(),a=o.files[0];if(!s(this,E).constructor.isValidImage(a)){s(this,l).displayMessage("Please upload a valid image (JPEG/PNG/GIF, max 1MB)","error"),s(this,l).disableSubmitButton(!1);return}const c=new FormData;c.append("description",t.value),c.append("photo",a),n.value&&i.value&&(c.append("lat",parseFloat(n.value)),c.append("lon",parseFloat(i.value)));const u=s(this,A).getToken();if(!u){s(this,l).displayMessage("Authentication token is missing. Please log in.","error"),s(this,l).redirectToLoginAfterDelay(2e3);return}try{const y=await s(this,E).submitStory(c,u);y.success?(s(this,l).displayMessage("Story submitted successfully!","success"),s(this,l).resetForm(),s(this,l).redirectToHome()):s(this,l).displayMessage(y.error||"Failed to submit story","error")}catch(y){s(this,l).displayMessage("An error occurred. Please try again.","error"),console.error(y)}finally{s(this,l).disableSubmitButton(!1)}}}l=new WeakMap,E=new WeakMap,A=new WeakMap;class fe{static addDefaultTileLayer(e,t){!e||!t||e.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a>',minZoom:5,maxZoom:18}).addTo(t)}constructor(e=Y.ADD_STORY||"https://story-api.dicoding.dev/v1/stories"){this.baseUrl=e}async submitStory(e,t){try{const o=await fetch(this.baseUrl,{method:"POST",headers:{Authorization:`Bearer ${t}`},body:e}),n=await o.json();if(!o.ok)throw new Error(n.message||"Failed to submit story");return{success:!0,data:n,error:null}}catch(o){return console.error("Error submitting story:",o),{success:!1,data:null,error:o.message||"An error occurred while submitting the story"}}}static isValidImage(e){if(!e)return!1;const t=["image/jpeg","image/png","image/gif"],o=1*1024*1024;return t.includes(e.type)&&e.size<=o}async getInitialMapLocation(){return new Promise((e,t)=>{"geolocation"in navigator?navigator.geolocation.getCurrentPosition(o=>{const{latitude:n,longitude:i}=o.coords;console.log(`Geolocation success: Lat ${n}, Lon ${i}`),e({lat:n,lon:i})},o=>{console.error("Error getting current position:",o),console.warn("Geolocation failed, defaulting to Semarang coordinates."),e({lat:-7.12,lon:110.4225})},{enableHighAccuracy:!0,timeout:5e3,maximumAge:0}):(console.warn("Geolocation is not supported by this browser. Defaulting to Semarang coordinates."),e({lat:-7.12,lon:110.4225}))})}}var $;class Ye{constructor(){h(this,$);U(this,"_mapInstance",null);U(this,"_markerInstance",null)}getTemplate(){return`
      <header>
        <div class="header-content">
          <a href="#/" class="back-button">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M19 12H5M12 19l-7-7 7-7"/>
            </svg>
            Back to Stories
          </a>
          <div id="userInfo"></div>
        </div>
      </header>

      <main id="addStoryMain" class="story-container">
        <h1>Share Your Story</h1>
        <form id="storyForm" enctype="multipart/form-data">
          <section class="form-group">
            <label for="description">Story Description</label>
            <textarea id="description" name="description" rows="4" required></textarea>
          </section>

          <section class="form-group">
            <label>Take a Photo or Upload</label>
            <div class="camera-section">
              <video id="cameraPreview" autoplay playsinline style="display: none; width: 100%; max-height: 250px;"></video>
              <button type="button" id="startCameraBtn" class="captureBtn">Start Camera</button>
              <button type="button" id="captureBtn" class="captureBtn" disabled>Capture</button>
              <button type="button" id="closeBtn" class="captureBtn" style="display: none;">Close Camera</button>
              <canvas id="snapshotCanvas" style="display: none;"></canvas>
            </div>

            <div id="fileUploadSection" class="form-group">
              <label for="photo">Or Upload Photo (Max 1MB)</label>
              <input type="file" id="photo" name="photo" accept="image/*">
              <div class="file-hint">Accepted formats: JPEG, PNG, GIF</div>
              <img id="photo-preview" style="max-width: 100%; margin-top: 10px; display: none;" />
            </div>
          </section>

          <section class="location-group">
            <h2>Location (Optional)</h2>
            <div class="form-row">
              <div class="form-group half-width">
                <label for="lat">Latitude</label>
                <input type="number" id="lat" name="lat" step="any" placeholder="e.g., -6.2088">
              </div>
              <div class="form-group half-width">
                <label for="lon">Longitude</label>
                <input type="number" id="lon" name="lon" step="any" placeholder="e.g., 106.8456">
              </div>
            </div>
            <div class="map-container" style="margin-top: 10px; margin-bottom: 10px; margin-right: 10px; margin-left: 10px;">
              <div id="map-picker"></div>
            </div>
          </section>

          <button type="submit" id="submitBtn">Submit Story</button>
        </form>

        <section id="message" class="message"></section>
      </main>

      <footer style="text-align: center; padding: 1.5rem 0; background: #f5f5f5; color: #333; font-size: 1rem;">
        <p>&copy; 2025 Dicoding Story App. All rights reserved.</p>
      </footer>
    `}getElements(){return{storyForm:document.getElementById("storyForm"),descriptionInput:document.getElementById("description"),photoInput:document.getElementById("photo"),latInput:document.getElementById("lat"),lonInput:document.getElementById("lon"),messageDiv:document.getElementById("message"),submitBtn:document.getElementById("submitBtn"),mapPicker:document.getElementById("map-picker"),cameraPreview:document.getElementById("cameraPreview"),startCameraBtn:document.getElementById("startCameraBtn"),captureBtn:document.getElementById("captureBtn"),closeBtn:document.getElementById("closeBtn"),snapshotCanvas:document.getElementById("snapshotCanvas"),photoPreview:document.getElementById("photo-preview"),fileUploadSection:document.getElementById("fileUploadSection")}}bindFormSubmit(e){const{storyForm:t}=this.getElements();t&&t.addEventListener("submit",e)}bindStartCameraButton(e){const{startCameraBtn:t}=this.getElements();t&&t.addEventListener("click",e)}bindCaptureButton(e){const{captureBtn:t}=this.getElements();t&&t.addEventListener("click",e)}bindCloseCameraButton(e){const{closeBtn:t}=this.getElements();t&&t.addEventListener("click",e)}bindPhotoInputChange(e){const{photoInput:t}=this.getElements();t&&t.addEventListener("change",e)}bindLocationInputChanges(e){const{latInput:t,lonInput:o}=this.getElements();t&&t.addEventListener("change",e),o&&o.addEventListener("change",e)}bindHashChange(e){window.addEventListener("hashchange",e)}bindPopState(e){window.addEventListener("popstate",e)}displayMessage(e,t){const{messageDiv:o}=this.getElements();o&&(o.textContent=e,o.className=`message ${t}`,o.style.display="block")}hideMessage(){const{messageDiv:e}=this.getElements();e&&(e.style.display="none")}disableSubmitButton(e){const{submitBtn:t}=this.getElements();t&&(t.disabled=e,t.textContent=e?"Submitting...":"Submit Story")}hideForm(){const{storyForm:e}=this.getElements();e&&(e.style.display="none")}async getCameraStream(){const{cameraPreview:e,startCameraBtn:t,captureBtn:o,closeBtn:n,fileUploadSection:i}=this.getElements();try{const a={video:{facingMode:"environment"}};let c;try{c=await navigator.mediaDevices.getUserMedia(a)}catch(u){console.warn("Failed to get environment camera, trying any available video source.",u),a.video=!0,c=await navigator.mediaDevices.getUserMedia(a)}return e.srcObject=c,e.style.display="block",t.style.display="none",o.style.display="inline-block",o.disabled=!1,n.style.display="inline-block",i.style.display="none",this.clearPhotoPreview(),c}catch(a){throw console.error("Error accessing camera:",a),t.style.display="inline-block",o.style.display="none",n.style.display="none",i.style.display="block",new Error("Failed to get camera stream: "+a.message+". Please ensure your browser has camera access permissions and you are using HTTPS (or localhost).")}}showCameraPreview(e){const{cameraPreview:t,captureBtn:o,closeBtn:n,startCameraBtn:i,fileUploadSection:a}=this.getElements();t&&o&&n&&i&&a&&(t.srcObject=e,t.style.display="block",o.disabled=!1,o.style.display="inline-block",i.style.display="none",n.style.display="inline-block",a.style.display="none")}hideCameraPreview(){const{cameraPreview:e,captureBtn:t,startCameraBtn:o,closeBtn:n,fileUploadSection:i}=this.getElements();e&&t&&o&&n&&i&&(e.srcObject=null,e.style.display="none",t.disabled=!0,t.style.display="none",o.style.display="inline-block",n.style.display="none",i.style.display="block")}stopCameraStream(e){e&&e.getTracks().forEach(t=>t.stop())}async capturePhoto(e){const{snapshotCanvas:t,cameraPreview:o,photoInput:n}=this.getElements();if(!e||!o||!t||!n)return null;const i=t.getContext("2d");return t.width=o.videoWidth,t.height=o.videoHeight,i.drawImage(o,0,0,t.width,t.height),new Promise(a=>{t.toBlob(c=>{if(c){const u=new File([c],`captured_photo_${Date.now()}.jpeg`,{type:"image/jpeg"}),y=new DataTransfer;y.items.add(u),n.files=y.files,a(u)}else a(null)},"image/jpeg",.95)})}clearPhotoPreview(){const{photoPreview:e,photoInput:t}=this.getElements();e&&(e.src="",e.style.display="none"),t&&(t.value="")}displayPhotoPreview(e){const{photoPreview:t}=this.getElements();t&&(t.src=e,t.style.display="block")}resetForm(){const{storyForm:e}=this.getElements();e&&e.reset(),this.clearPhotoPreview(),this.hideCameraPreview()}renderMap(e,t,o,n){const{mapPicker:i}=this.getElements();!window.L||!i||(this._mapInstance&&(this._mapInstance.remove(),this._mapInstance=null),i.innerHTML="",i.style.width="100%",i.style.height="400px",i.style.position="relative",this._mapInstance=window.L.map(i,{zoom:12,center:[e,t]}),fe.addDefaultTileLayer(window.L,this._mapInstance),this._markerInstance=window.L.marker([e,t]).addTo(this._mapInstance),this._markerInstance.bindPopup(`Lat: ${e.toFixed(5)}, Lon: ${t.toFixed(5)}`).openPopup(),this._mapInstance.on("click",a=>{const{lat:c,lng:u}=a.latlng;typeof o=="function"&&o(c,u)}),n())}updateMapMarker(e,t){if(this._markerInstance&&this._mapInstance){const o=[e,t];this._markerInstance.setLatLng(o),this._markerInstance.bindPopup(`Lat: ${e.toFixed(5)}, Lon: ${t.toFixed(5)}`).openPopup()}}setMapView(e,t){this._mapInstance&&this._mapInstance.setView([e,t],this._mapInstance.getZoom())}setLatLonInput(e,t){const{latInput:o,lonInput:n}=this.getElements();o&&(o.value=e.toFixed(5)),n&&(n.value=t.toFixed(5))}redirectToLoginAfterDelay(e){setTimeout(()=>{window.location.href="#/login"},e)}redirectToHome(){window.location.href="#/"}async render(){return this.getTemplate()}async afterRender(){const e=new fe,t=w;m(this,$,new Je({view:this,addStoryModel:e,authModel:t})),await s(this,$).initialize()}}$=new WeakMap;var p,_,x,V,F;class Ze{constructor({view:e,detailStoryModel:t,authModel:o,urlParser:n}){h(this,p);h(this,_);h(this,x);h(this,V);h(this,F);if(!e||!t||!o||!n)throw new Error("View, DetailStoryModel, AuthModel, and urlParser must be provided.");m(this,p,e),m(this,_,t),m(this,x,o),m(this,V,n)}setViewInstance(e){m(this,F,e)}async initialize(){s(this,p).bindBackButton(this._handleBackButtonClick.bind(this)),await this._loadStoryDetail()}_handleBackButtonClick(e){e.preventDefault(),s(this,p).goBack()}async _loadStoryDetail(){var o;let e="";try{e=((o=s(this,V))==null?void 0:o.call(this))||"",console.log("DEBUG (Presenter): Story ID obtained from urlParser =",e),e||console.log("DEBUG (Presenter): Story ID is empty after urlParser execution.")}catch(n){console.error("DEBUG (Presenter): Error calling urlParser:",n),e=""}if(console.log("DEBUG: Story ID obtained =",e),s(this,p).showLoading(),!e){s(this,p).hideLoading(),s(this,p).showError("Story ID is missing in the URL. Cannot load details."),s(this,p).redirectToHomeAfterDelay&&s(this,p).redirectToHomeAfterDelay(2e3);return}const t=s(this,x).getToken();if(!t){s(this,p).hideLoading(),s(this,p).showError("Please login first to view story details."),s(this,p).redirectToLoginAfterDelay(2e3);return}try{const n=await s(this,_).getStoryDetail(t,e);s(this,p).hideLoading(),n.success?setTimeout(()=>{s(this,p).displayStory(n.data,s(this,x).getUserName())},500):s(this,p).showError(n.error||"Failed to load story details. Story might not exist.")}catch(n){console.error("Error fetching story detail:",n),s(this,p).hideLoading(),s(this,p).showError("An unexpected error occurred while fetching story details.")}}async displayMapForStory(e,t){if(!s(this,_)||!s(this,F))return;const{mapContainer:o}=s(this,F).getElements();o&&await s(this,_).displayMap(o,e,t)}}p=new WeakMap,_=new WeakMap,x=new WeakMap,V=new WeakMap,F=new WeakMap;class Qe{constructor(e="https://story-api.dicoding.dev/v1"){this.baseUrl=e}async getStoryDetail(e,t){try{const o=await fetch(`${this.baseUrl}/stories/${t}`,{method:"GET",headers:{Authorization:`Bearer ${e}`}}),n=await o.json();if(!o.ok){console.warn("Network fetch for story detail failed, attempting to get from IndexedDB.");const i=await StoryDatabase.getStoryDetail(t);if(i)return{success:!0,data:i,error:null,source:"indexeddb_fallback"};throw new Error(n.message||"Failed to fetch story detail from network or cache.")}if(n.story)return{success:!0,data:n.story,error:null,source:"network"};throw new Error('API response does not contain a "story" object.')}catch(o){console.error("Error fetching story detail:",o),console.warn("Network request for story detail failed, trying to retrieve from IndexedDB.");try{const n=await StoryDatabase.getStoryDetail(t);return n?{success:!0,data:n,error:null,source:"indexeddb"}:{success:!1,data:null,error:o.message||"An error occurred and no cached detail data available.",source:"no_detail_data_available"}}catch(n){return console.error("Error retrieving from IndexedDB:",n),{success:!1,data:null,error:`Network error and IndexedDB retrieval failed: ${o.message||n.message}`,source:"fetch_and_indexeddb_detail_failed"}}}}async displayMap(e,t,o){if(!e||!window.L){console.warn("Leaflet or container missing.");return}e.innerHTML="",e.style.display="block",e.innerHTML='<div id="map" style="height: 400px; width: 100%; position: relative;"></div>';const n=[t,o],i=window.L.map("map",{center:n,zoom:15,zoomControl:!1});window.L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',minZoom:5,maxZoom:18}).addTo(i),window.L.marker(i.getCenter()).addTo(i).bindPopup(`Location of the story:<br>Lat: ${t.toFixed(4)}<br>Lon: ${o.toFixed(4)}`).openPopup(),setTimeout(()=>{i.invalidateSize(),i.setView(n)},200);const c=window.L.popup();i.on("click",u=>{c.setLatLng(u.latlng).setContent(`You clicked at Lat: ${u.latlng.lat.toFixed(4)}, Lon: ${u.latlng.lng.toFixed(4)}`).openOn(i)})}}function Xe(r){const e=r.split("/");return{resource:e[1]||null,id:e[2]||null}}function et(r){let e="";return r.resource&&(e=e.concat(`/${r.resource}`)),r.id&&(e=e.concat("/:id")),e||"/"}function tt(r){const o=new URL(r).hash.slice(1).split("/")[2];return o.startsWith(":")?o.slice(1):o}function ot(){return location.hash.replace("#","")||"/"}function st(){const r=ot(),e=Xe(r);return et(e)}var k;class nt{constructor(){h(this,k)}getTemplate(){return`
      <header>
        <div class="header-content">
          <a href="#/" id="backBtn" class="back-button">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M19 12H5M12 19l-7-7 7-7"/>
            </svg>
            Back to Stories
          </a>
          <div id="userInfo"></div>
        </div>
      </header>

      <main id="storyDetailPageMain">
        <div id="loading" class="loading">Loading story details...</div>
        <div id="error" class="error-message" style="display: none;"></div>

        <section id="storyContainer" class="story-container" style="display: none;">
          <img id="storyImage" class="story-image" src="" alt="Story Image">
          <div class="story-content">
            <div class="story-header">
              <h1 id="storyTitle" class="story-title"></h1>
              <div id="storyDate" class="story-date"></div>
            </div>
            <p id="storyDescription" class="story-description"></p>
            <div id="storyLocation" class="story-location" style="display: none;">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"/>
                <circle cx="12" cy="10" r="3"/>
              </svg>
              <span id="locationText"></span>
            </div>
            <div id="mapContainer" class="map-container" style="display: none;"></div>
          </div>
        </section>
      </main>
      <footer style="text-align: center; padding: 1.5rem 0; background: #f5f5f5; color: #333; font-size: 1rem;">
        <p>&copy; 2025 Dicoding Story App. All rights reserved.</p>
      </footer>
    `}getElements(){return{loadingElement:document.getElementById("loading"),errorElement:document.getElementById("error"),storyContainer:document.getElementById("storyContainer"),storyImage:document.getElementById("storyImage"),storyTitle:document.getElementById("storyTitle"),storyDate:document.getElementById("storyDate"),storyDescription:document.getElementById("storyDescription"),storyLocation:document.getElementById("storyLocation"),locationText:document.getElementById("locationText"),mapContainer:document.getElementById("mapContainer"),userInfo:document.getElementById("userInfo"),backButton:document.getElementById("backBtn")}}bindBackButton(e){const{backButton:t}=this.getElements();t&&t.addEventListener("click",e)}showLoading(){const{loadingElement:e,errorElement:t,storyContainer:o}=this.getElements();e&&(e.style.display="block"),t&&(t.style.display="none"),o&&(o.style.display="none")}hideLoading(){const{loadingElement:e}=this.getElements();e&&(e.style.display="none")}showError(e){const{errorElement:t,storyContainer:o,loadingElement:n}=this.getElements();t&&(t.textContent=e,t.style.display="block"),o&&(o.style.display="none"),n&&(n.style.display="none")}async displayStory(e,t=""){const{storyImage:o,storyTitle:n,storyDescription:i,storyDate:a,storyLocation:c,locationText:u,mapContainer:y,userInfo:z,storyContainer:ae,loadingElement:ce,errorElement:le}=this.getElements();if(!e||!e.name||!e.photoUrl){this.showError("Story content could not be loaded. Please try again later.");return}o&&(o.src=e.photoUrl,o.alt=`${e.name}'s story`),n&&(n.textContent=e.name),i&&(i.textContent=e.description);const Ie=new Date(e.createdAt);a&&(a.textContent=Ie.toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"})),e.lat&&e.lon?(c&&(c.style.display="flex"),u&&(u.textContent=`Lat: ${e.lat.toFixed(4)}, Lon: ${e.lon.toFixed(4)}`),s(this,k)&&s(this,k).displayMapForStory&&await s(this,k).displayMapForStory(e.lat,e.lon)):(c&&(c.style.display="none"),y&&(y.style.display="none")),t&&z?z.textContent=`Hello, ${t}`:z&&(z.textContent=""),ae&&(ae.style.display="block"),ce&&(ce.style.display="none"),le&&(le.style.display="none")}goBack(){window.history.back()}redirectToLoginAfterDelay(e){setTimeout(()=>{window.location.href="#/login"},e)}redirectToHomeAfterDelay(e){setTimeout(()=>{window.location.hash="#/"},e)}async render(){return this.getTemplate()}async afterRender(){var n,i;const e=new Qe,t=w,o=()=>tt(window.location.href);console.log("DEBUG: Story ID =",o()),console.log("DEBUG (View): Full URL =",window.location.href),console.log("DEBUG (View): URL Hash =",window.location.hash),console.log("DEBUG (View): Story ID detected in View (before passing) =",o()),m(this,k,new Ze({view:this,detailStoryModel:e,authModel:t,urlParser:o})),s(this,k)&&((i=(n=s(this,k)).setViewInstance)==null||i.call(n,this)),await s(this,k).initialize()}}k=new WeakMap;var f,I,j;class rt{constructor({view:e,authModel:t,sleepFunction:o}){h(this,f);h(this,I);h(this,j);if(!e||!t||!o)throw new Error("View, AuthModel instance, and sleepFunction must be provided.");m(this,f,e),m(this,I,t),m(this,j,o)}async initialize(){s(this,f).bindLoginFormSubmit(this._handleLoginSubmit.bind(this)),s(this,I).constructor.isAuthenticated()&&s(this,f).redirectToHome()}async _handleLoginSubmit(e){e.preventDefault(),s(this,f).hideMessages();const{email:t,password:o}=s(this,f).getLoginFormValues();try{if(!s(this,I).constructor.isValidEmail(t)){s(this,f).displayMessage("Invalid email format.","error");return}const n=await s(this,I).login(t,o);n.success?(s(this,I).constructor.storeAuthData(n.data.token,n.data.userId,n.data.name),s(this,f).displayMessage(n.data.message,"success"),await s(this,j).call(this,1e3),s(this,f).displayMessage("Login successful! Redirecting to home page...","success"),s(this,f).redirectToHome()):s(this,f).displayMessage(n.error||"Login failed. Please try again.","error")}catch(n){s(this,f).displayMessage("An error occurred. Please check your connection and try again.","error"),console.error("Error:",n)}}}f=new WeakMap,I=new WeakMap,j=new WeakMap;function Ee(r=1e3){return new Promise(e=>setTimeout(e,r))}var H;class it{constructor(){h(this,H)}getTemplate(){return`
      <main class="container">
        <h1>Login to Your Account</h1>
        <form id="loginForm">
          <div class="form-group">
            <label for="email">Email</label>
            <input type="email" id="email" name="email" required>
          </div>
          <div class="form-group">
            <label for="password">Password</label>
            <input type="password" id="password" name="password" required>
          </div>
          <button type="submit">Login</button>
        </form>
        <section style="margin-top: 16px; text-align: center;">
          <span>Belum punya akun? </span>
          <a href="#/register" id="register-link">Daftar di sini</a>
        </section>
        <section id="message" class="message"></section>
        <section id="userInfo" class="user-info" style="display:none;">
          <h2>Login Successful</h2>
          <p><strong>User ID:</strong> <span id="userId"></span></p>
          <p><strong>Name:</strong> <span id="userName"></span></p>
          <p><strong>Token:</strong></p>
          <p class="token" id="userToken"></p>
        </section>
      </main>
    `}getElements(){return{loginForm:document.getElementById("loginForm"),messageDiv:document.getElementById("message"),userInfoDiv:document.getElementById("userInfo"),emailInput:document.getElementById("email"),passwordInput:document.getElementById("password")}}bindLoginFormSubmit(e){const{loginForm:t}=this.getElements();t&&t.addEventListener("submit",e)}displayMessage(e,t){const{messageDiv:o}=this.getElements();o&&(o.textContent=e,o.className=`message ${t}`,o.style.display="block")}hideMessages(){const{messageDiv:e,userInfoDiv:t}=this.getElements();e&&(e.style.display="none"),t&&(t.style.display="none")}getLoginFormValues(){const{emailInput:e,passwordInput:t}=this.getElements();return{email:e.value,password:t.value}}redirectToHome(){window.location.hash="#/"}async render(){return this.getTemplate()}async afterRender(){const e=new w,t=Ee;m(this,H,new rt({view:this,authModel:e,sleepFunction:t})),await s(this,H).initialize()}}H=new WeakMap;var g,P,L,N;class at{constructor({view:e,registerModel:t,loginModel:o,sleepFunction:n}){h(this,g);h(this,P);h(this,L);h(this,N);if(!e||!t||!o||!n)throw new Error("View, registerModel, loginModel, and sleepFunction must be provided.");m(this,g,e),m(this,P,t),m(this,L,o),m(this,N,n)}async initialize(){s(this,g).bindRegisterFormSubmit(this._handleRegistrationSubmit.bind(this)),s(this,g).bindGuestButtonClick(this._handleGuestAccountCreation.bind(this))}async _handleRegistrationSubmit(e){e.preventDefault(),s(this,g).hideMessage();const{name:t,email:o,password:n}=s(this,g).getRegistrationFormValues(),i=s(this,P).constructor.isValidEmail(o),a=s(this,P).constructor.isValidPassword(n);if(!i){s(this,g).displayMessage("Invalid email format.","error");return}if(!a){s(this,g).displayMessage("Password must be at least 8 characters.","error");return}try{const c=await s(this,P).register({name:t,email:o,password:n});if(console.log("Result presenter:",c),c.success)s(this,g).displayMessage("Registration successful! Please check your email to verify your account.","success"),s(this,g).resetRegistrationForm(),await s(this,N).call(this,500),s(this,g).redirectToLogin();else{s(this,g).displayMessage(c.error||"Registration failed. Please try again.","error");return}}catch(c){s(this,g).displayMessage("An error occurred. Please check your connection and try again.","error"),console.error("Error:",c)}}async _handleGuestAccountCreation(){try{const e=`Guest_${Math.random().toString(36).substring(2,8)}`,t=`${e.toLowerCase()}.${Math.random().toString(36).substring(2,8)}@gmail.com`,o=Math.random().toString(36).substring(2,10);if((await s(this,P).register({name:e,email:t,password:o})).success){s(this,g).displayMessage("Guest account created successfully!","success"),s(this,L).storeGuestSession(t,o);const i=s(this,L).getGuestSession();if(!i){s(this,g).displayMessage("Failed to retrieve guest session data.","error");return}const a=await s(this,L).login(i.email,i.password);a.success?(s(this,L).constructor.storeAuthData(a.data.token,a.data.userId,a.data.name),await s(this,N).call(this,2e3),s(this,g).redirectToHome()):s(this,g).displayMessage("Failed to log in with guest account.","error")}else{s(this,g).displayMessage("Failed to create guest account. Please try again.","error");return}}catch(e){s(this,g).displayMessage("Error creating guest account.","error"),console.error("Guest account error:",e)}}}g=new WeakMap,P=new WeakMap,L=new WeakMap,N=new WeakMap;class ct{constructor(e=Y.REGISTER||"https://story-api.dicoding.dev/v1/register"){this.baseUrl=e}async register({name:e,email:t,password:o}){try{const n={name:e,email:t,password:o};console.log("Request payload:",n);const i=await fetch(this.baseUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}),a=await i.text();console.log("Raw response:",a);const c=a?JSON.parse(a):{};if(console.log("Data response:",c),i.ok)return{success:!0,data:c,error:null};throw new Error(c.message||"Registration failed")}catch(n){return{success:!1,data:null,error:n.message}}}static isValidEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}static isValidPassword(e){return e.length>=8}}var O;class lt{constructor(){h(this,O)}getTemplate(){return`
      <main class="container">
        <h1>Register Account</h1>
        <form id="registrationForm">
          <div class="form-group">
            <label for="username">Full Name</label>
            <input type="text" id="username" name="username" required />
          </div>
          <div class="form-group">
            <label for="email">Email</label>
            <input type="email" id="email" name="email" required />
          </div>
          <div class="form-group">
            <label for="password">Password</label>
            <input type="password" id="password" name="password" required minlength="8" />
            <div class="password-hint">Password must be at least 8 characters</div>
          </div>
          <button type="submit">Register</button>
          <button type="button" id="guestButton" class="guest-button">Continue as Guest</button>
        </form>
        <section id="message" class="message"></section>
      </main>
    `}getElements(){return{registrationForm:document.getElementById("registrationForm"),guestButton:document.getElementById("guestButton"),messageDiv:document.getElementById("message"),usernameInput:document.getElementById("username"),emailInput:document.getElementById("email"),passwordInput:document.getElementById("password")}}bindRegisterFormSubmit(e){const{registrationForm:t}=this.getElements();t&&t.addEventListener("submit",e)}bindGuestButtonClick(e){const{guestButton:t}=this.getElements();t&&t.addEventListener("click",e)}displayMessage(e,t){const{messageDiv:o}=this.getElements();o&&(o.textContent=e,o.className=`message ${t}`,o.style.display="block")}hideMessage(){const{messageDiv:e}=this.getElements();e&&(e.style.display="none")}getRegistrationFormValues(){const{usernameInput:e,emailInput:t,passwordInput:o}=this.getElements();return{name:e.value,email:t.value,password:o.value}}resetRegistrationForm(){const{registrationForm:e}=this.getElements();e&&e.reset()}redirectToLogin(){window.location.hash="#/login"}redirectToHome(){window.location.hash="#/"}async render(){return this.getTemplate()}async afterRender(){const e=new ct,t=new w,o=Ee;m(this,O,new at({view:this,registerModel:e,loginModel:t,sleepFunction:o})),await s(this,O).initialize()}}O=new WeakMap;var b,C;class dt{constructor({view:e,bookmarkModel:t}){h(this,b);h(this,C);if(!e||!t)throw new Error("View and BookmarkModel must be provided.");m(this,b,e),m(this,C,t)}async initialize(){await this._loadBookmarks(),s(this,b).bindBackButton(this._handleBackButtonClick.bind(this)),s(this,b).bindRemoveBookmarkButton(this._handleRemoveBookmark.bind(this)),s(this,b).focusMainContent()}async _loadBookmarks(){try{const e=await s(this,C).getAllBookmarks();s(this,b).renderStories(e)}catch(e){s(this,b).showErrorMessage("Gagal memuat cerita favorit."),console.error("Error loading bookmarks:",e)}}_handleBackButtonClick(){s(this,b).goBackToAllStories()}async _handleRemoveBookmark(e){try{await s(this,C).deleteBookmark(e),s(this,b).removeStoryElement(e),s(this,b).showMessage("Cerita berhasil dihapus dari favorit."),(await s(this,C).getAllBookmarks()).length===0&&s(this,b).displayEmptyBookmarkMessage()}catch(t){s(this,b).showErrorMessage("Gagal menghapus cerita dari favorit: "+(t.message||t)),console.error("Error removing bookmark:",t)}}}b=new WeakMap,C=new WeakMap;var G;class ut{constructor(){h(this,G)}getTemplate(){return`
      <header>
        <a href="#bookmarkMain" class="skip-link">Skip to main content</a>
        <div class="header-content">
          <a href="#/" id="backBtn" class="back-button">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M19 12H5M12 19l-7-7 7-7"/>
            </svg>
            Kembali
          </a>
        </div>
      </header>
      <main id='bookmarkMain' tabindex="-1"> <h1>Cerita Favorit Anda</h1>
        <p>Kumpulan cerita yang telah Anda simpan.</p>
        <div id="notifStatus" style="margin-bottom: 1rem;"></div> <div id="bookmark-story-container"></div>
      </main>
      <footer style="text-align: center; padding: 1.5rem 0; background: #f5f5f5; color: #333; font-size: 1rem;">
        <p>&copy; 2025 Dicoding Story App. All rights reserved.</p>
      </footer>
    `}handleSkipLinkAutoFocus(){const{skipLink:e}=this.getElements();if(!e)return;function t(){window.scrollY===0?(e.style.top="80px",e.style.left="50px",e.tabIndex=0,e.focus()):(e.style.top="-100px",e.tabIndex=-1,e.blur())}window.addEventListener("scroll",t),window.addEventListener("load",t)}getElements(){return{backBtn:document.getElementById("backBtn"),storyContainer:document.getElementById("bookmark-story-container"),skipLink:document.querySelector(".skip-link"),mainContent:document.getElementById("bookmarkMain"),notifStatus:document.getElementById("notifStatus")}}bindBackButton(e){const{backBtn:t}=this.getElements();t&&t.addEventListener("click",e)}bindRemoveBookmarkButton(e){this._removeBookmarkHandler=e}showNotifStatus(e,t=!1){const{notifStatus:o}=this.getElements();o&&(o.textContent=e,o.style.color=t?"red":"green")}showMessage(e){alert(e)}showErrorMessage(e){alert(`Error: ${e}`)}async renderStories(e){const{storyContainer:t}=this.getElements();if(t){if(t.innerHTML="",!e||e.length===0){this.displayEmptyBookmarkMessage();return}for(const o of e){const n=document.createElement("div");n.classList.add("story"),n.setAttribute("data-story-id",o.id),n.innerHTML+=be(o,!0),t.appendChild(n)}this._bindRemoveBookmarkButtonsToElements()}}displayEmptyBookmarkMessage(){const{storyContainer:e}=this.getElements();e&&(e.innerHTML="<p>Belum ada cerita yang disimpan.</p>")}_bindRemoveBookmarkButtonsToElements(){const{storyContainer:e}=this.getElements();if(!e||!this._removeBookmarkHandler)return;e.querySelectorAll(".bookmarkBtn").forEach(o=>{o.removeEventListener("click",this._lastRemoveBookmarkListener);const n=i=>{const a=o.getAttribute("data-id");this._removeBookmarkHandler(a)};o.addEventListener("click",n),this._lastRemoveBookmarkListener=n})}removeStoryElement(e){const{storyContainer:t}=this.getElements();if(t){const o=t.querySelector(`.story[data-story-id="${e}"]`);o&&o.remove()}}focusMainContent(){const{mainContent:e,skipLink:t}=this.getElements();!e||!t||t._focusHandlerAdded||(t.addEventListener("click",function(o){o.preventDefault(),t.blur(),e.focus(),e.scrollIntoView()}),t._focusHandlerAdded=!0)}goBackToAllStories(){window.location.hash="#/"}async render(){return this.getTemplate()}async afterRender(){const e=new we;m(this,G,new dt({view:this,bookmarkModel:e})),await s(this,G).initialize(),this.handleSkipLinkAutoFocus()}}G=new WeakMap;const ee={"/":new Ke,"/detail/:id":new nt,"/login":new it,"/register":new lt,"/add":new Ye,"/bookmark":new ut};class ht{constructor({content:e}){this._content=e}async renderPage(){const e=localStorage.getItem("authToken");let t=st();console.log(t),(!t||!ee[t])&&(t="/login",window.location.hash="/login"),!e&&t!=="/register"&&(t="/login",window.location.hash="/login"),e&&t==="/login"&&(t="/",window.location.hash="/");const o=ee[t]||ee["/login"];if(!o){document.startViewTransition?document.startViewTransition(async()=>{this._content.innerHTML="<h2>404 - Halaman tidak ditemukan</h2>"}):this._content.innerHTML="<h2>404 - Halaman tidak ditemukan</h2>";return}document.startViewTransition?document.startViewTransition(async()=>{this._content.innerHTML=await o.render(),await o.afterRender()}):(this._content.innerHTML=await o.render(),await o.afterRender())}checkNotificationSupport(){return{supported:"Notification"in window,pushManagerSupported:"serviceWorker"in navigator&&"PushManager"in window}}async getNotificationPermission(){return"Notification"in window?Notification.permission:"unsupported"}async showNotificationPermissionPrompt(){return"Notification"in window?Notification.requestPermission():"unsupported"}showNotificationSupportWarning(){console.warn("Browser does not support notifications.")}showNotificationPermissionDeniedWarning(){console.warn("Notification permission denied.")}showGenericNotificationError(e){console.error("Notification error:",e)}}document.addEventListener("DOMContentLoaded",async()=>{const r=new ht({content:document.querySelector("#main-content")});await mt(),await r.renderPage(),window.addEventListener("hashchange",async()=>{await r.renderPage()})});async function mt(){if(!("serviceWorker"in navigator)||!("PushManager"in window)){console.warn("Push notification tidak didukung.");return}try{const r=await navigator.serviceWorker.register("/sw.js");if(console.log("Service Worker terdaftar:",r),await Notification.requestPermission()!=="granted"){console.warn("Izin notifikasi tidak diberikan");return}const t=await gt(r);console.log(`Status subscription: ${t?"SUDAH":"BELUM"} terdaftar`)}catch(r){console.error("Gagal setup push notification:",r)}}async function gt(r){try{return!!await r.pushManager.getSubscription()}catch{return!1}}
